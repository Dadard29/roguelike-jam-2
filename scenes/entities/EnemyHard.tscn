[gd_scene load_steps=11 format=2]

[ext_resource path="res://scenes/entities/Enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://resources/EnemyHardSprites.tres" type="SpriteFrames" id=2]
[ext_resource path="res://resources/EnemyDetectionHard.tres" type="Shape2D" id=3]
[ext_resource path="res://scenes/entities/EnemyHard.gd" type="Script" id=4]
[ext_resource path="res://assets/sprites/enemy/hard/idle/enemy_hard_idle_body0001.png" type="Texture" id=5]
[ext_resource path="res://assets/sprites/enemy/hard/idle/enemy_hard_idle_body0000.png" type="Texture" id=6]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 color: hint_color;
uniform float flash_state: hint_range(0,1) = 0;

void fragment() {
	vec4 pixel_color = texture(TEXTURE, UV);
	COLOR = mix(pixel_color, color, flash_state);
	COLOR.a *= pixel_color.a;
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/flash_state = 0.0

[sub_resource type="SpriteFrames" id=6]
animations = [ {
"frames": [ ExtResource( 6 ), ExtResource( 5 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CapsuleShape2D" id=5]
radius = 42.3514
height = 0.0

[node name="EnemyHard" instance=ExtResource( 1 )]
script = ExtResource( 4 )

[node name="Sprite" parent="Animation" index="1"]
material = SubResource( 4 )
scale = Vector2( 0.5, 0.5 )
frames = ExtResource( 2 )

[node name="SpriteBody" type="AnimatedSprite" parent="Animation" index="2"]
scale = Vector2( 0.5, 0.5 )
frames = SubResource( 6 )

[node name="Area2D" parent="." index="1" groups=["enemy_hard"]]

[node name="CollisionShape2D" parent="Area2D" index="0"]
shape = SubResource( 5 )

[node name="Detection" type="Area2D" parent="." index="3"]

[node name="Shape" type="CollisionShape2D" parent="Detection" index="0"]
shape = ExtResource( 3 )

[connection signal="dying" from="." to="." method="_on_EnemyHard_dying"]
[connection signal="area_entered" from="Detection" to="." method="_on_Detection_area_entered"]
[connection signal="area_exited" from="Detection" to="." method="_on_Detection_area_exited"]
